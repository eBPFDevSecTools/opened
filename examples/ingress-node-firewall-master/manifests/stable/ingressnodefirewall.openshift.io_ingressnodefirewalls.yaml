apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: ingressnodefirewalls.ingressnodefirewall.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: ingress-node-firewall-webhook-service
          namespace: openshift-ingress-node-firewall
          path: /convert
      conversionReviewVersions:
      - v1
  group: ingressnodefirewall.openshift.io
  names:
    kind: IngressNodeFirewall
    listKind: IngressNodeFirewallList
    plural: ingressnodefirewalls
    singular: ingressnodefirewall
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressNodeFirewall is the Schema for the ingressnodefirewalls
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressNodeFirewallSpec defines the desired state of IngressNodeFirewall.
            properties:
              ingress:
                description: ingress is a list of ingress firewall policy rules.
                items:
                  description: IngressNodeFirewallRules define ingress node firewall
                    rule.
                  properties:
                    rules:
                      description: rules is a list of per protocol ingress node firewall
                        rules.
                      items:
                        description: IngressNodeFirewallProtocolRule defines an ingress
                          node firewall rule per protocol.
                        properties:
                          action:
                            description: action can be Allow or Deny, default action
                              is Allow.
                            enum:
                            - Allow
                            - Deny
                            type: string
                          order:
                            description: order defines the order of execution of ingress
                              firewall rules. The minimum order value is 1 and the
                              values must be unique.
                            format: int32
                            minimum: 1
                            type: integer
                          protocolConfig:
                            description: protocolConfig is a discriminated union of
                              a protocol's specific configuration for TCP, UDP, SCTP,
                              ICMP and ICMPv6. If not specified, packet matching will
                              be based on the protocol value and protocol configuration,
                              such as dstPort/type/code, will be ignored
                            properties:
                              icmp:
                                description: icmp defines an ingress node firewall
                                  rule for ICMP protocol.
                                properties:
                                  icmpCode:
                                    description: icmpCode defines ICMP Code ID (RFC
                                      792). if configured, this field matches against
                                      the ICMP/ICMPv6 header otherwise its ignored.
                                    maximum: 255
                                    minimum: 0
                                    type: integer
                                  icmpType:
                                    description: imcpType defines ICMP Type Numbers
                                      (RFC 792). if configured, this field matches
                                      against the ICMP/ICMPv6 header otherwise its
                                      ignored.
                                    maximum: 255
                                    minimum: 0
                                    type: integer
                                type: object
                              icmpv6:
                                description: icmpv6 defines an ingress node firewall
                                  rule for ICMPv6 protocol.
                                properties:
                                  icmpCode:
                                    description: icmpCode defines ICMP Code ID (RFC
                                      792). if configured, this field matches against
                                      the ICMP/ICMPv6 header otherwise its ignored.
                                    maximum: 255
                                    minimum: 0
                                    type: integer
                                  icmpType:
                                    description: imcpType defines ICMP Type Numbers
                                      (RFC 792). if configured, this field matches
                                      against the ICMP/ICMPv6 header otherwise its
                                      ignored.
                                    maximum: 255
                                    minimum: 0
                                    type: integer
                                type: object
                              protocol:
                                description: protocol can be ICMP, ICMPv6, TCP, SCTP
                                  or UDP.
                                enum:
                                - ICMP
                                - ICMPv6
                                - TCP
                                - UDP
                                - SCTP
                                - ""
                                type: string
                              sctp:
                                description: sctp defines an ingress node firewall
                                  rule for SCTP protocol.
                                properties:
                                  ports:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'ports defines either a single port
                                      or a range of ports to apply a protocol rule
                                      too. To filter a single port, set a single port
                                      as an integer value. For example ports: 80.
                                      To filter a range of ports, use a "start-end"
                                      range, string format. For example ports: "80-100".'
                                    x-kubernetes-int-or-string: true
                                type: object
                              tcp:
                                description: tcp defines an ingress node firewall
                                  rule for TCP protocol.
                                properties:
                                  ports:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'ports defines either a single port
                                      or a range of ports to apply a protocol rule
                                      too. To filter a single port, set a single port
                                      as an integer value. For example ports: 80.
                                      To filter a range of ports, use a "start-end"
                                      range, string format. For example ports: "80-100".'
                                    x-kubernetes-int-or-string: true
                                type: object
                              udp:
                                description: udp defines an ingress node firewall
                                  rule for UDP protocol.
                                properties:
                                  ports:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'ports defines either a single port
                                      or a range of ports to apply a protocol rule
                                      too. To filter a single port, set a single port
                                      as an integer value. For example ports: 80.
                                      To filter a range of ports, use a "start-end"
                                      range, string format. For example ports: "80-100".'
                                    x-kubernetes-int-or-string: true
                                type: object
                            required:
                            - protocol
                            type: object
                            x-kubernetes-validations:
                            - message: tcp is required when protocol is TCP, and forbidden
                                otherwise
                              rule: 'has(self.protocol) && self.protocol == ''TCP''
                                ?  has(self.tcp) : !has(self.tcp)'
                            - message: udp is required when protocol is UDP, and forbidden
                                otherwise
                              rule: 'has(self.protocol) && self.protocol == ''UDP''
                                ?  has(self.udp) : !has(self.udp)'
                            - message: sctp is required when protocol is SCTP, and
                                forbidden otherwise
                              rule: 'has(self.protocol) && self.protocol == ''SCTP''
                                ?  has(self.sctp) : !has(self.sctp)'
                            - message: icmp is required when protocol is ICMP, and
                                forbidden otherwise
                              rule: 'has(self.protocol) && self.protocol == ''ICMP''
                                ?  has(self.icmp) : !has(self.icmp)'
                            - message: icmpv6 is required when protocol is ICMPv6,
                                and forbidden otherwise
                              rule: 'has(self.protocol) && self.protocol == ''ICMPv6''
                                ?  has(self.icmpv6) : !has(self.icmpv6)'
                        required:
                        - order
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - order
                      x-kubernetes-list-type: map
                    sourceCIDRs:
                      description: sourceCIDRs defines the origin of packets that
                        FirewallProtocolRules will be applied to.
                      items:
                        type: string
                      minItems: 1
                      type: array
                  required:
                  - sourceCIDRs
                  type: object
                minItems: 1
                type: array
              interfaces:
                description: interfaces is a list of interfaces where the ingress
                  firewall policy will be applied on.
                items:
                  type: string
                minItems: 1
                type: array
              nodeSelector:
                description: nodeSelector Selects node(s) where ingress firewall rules
                  will be applied to.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
          status:
            description: IngressNodeFirewallStatus defines the observed state of IngressNodeFirewall.
            properties:
              syncStatus:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
