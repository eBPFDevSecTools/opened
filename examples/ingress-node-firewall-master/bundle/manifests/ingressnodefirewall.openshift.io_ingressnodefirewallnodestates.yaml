apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: ingressnodefirewallnodestates.ingressnodefirewall.openshift.io
spec:
  group: ingressnodefirewall.openshift.io
  names:
    kind: IngressNodeFirewallNodeState
    listKind: IngressNodeFirewallNodeStateList
    plural: ingressnodefirewallnodestates
    singular: ingressnodefirewallnodestate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressNodeFirewallNodeState is the Schema for the ingressnodefirewallnodestates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressNodeFirewallNodeStateSpec defines the desired state
              of IngressNodeFirewallNodeState.
            properties:
              interfaceIngressRules:
                additionalProperties:
                  items:
                    description: IngressNodeFirewallRules define ingress node firewall
                      rule.
                    properties:
                      rules:
                        description: rules is a list of per protocol ingress node
                          firewall rules.
                        items:
                          description: IngressNodeFirewallProtocolRule defines an
                            ingress node firewall rule per protocol.
                          properties:
                            action:
                              description: action can be Allow or Deny, default action
                                is Allow.
                              enum:
                              - Allow
                              - Deny
                              type: string
                            order:
                              description: order defines the order of execution of
                                ingress firewall rules. The minimum order value is
                                1 and the values must be unique.
                              format: int32
                              minimum: 1
                              type: integer
                            protocolConfig:
                              description: protocolConfig is a discriminated union
                                of a protocol's specific configuration for TCP, UDP,
                                SCTP, ICMP and ICMPv6. If not specified, packet matching
                                will be based on the protocol value and protocol configuration,
                                such as dstPort/type/code, will be ignored
                              properties:
                                icmp:
                                  description: icmp defines an ingress node firewall
                                    rule for ICMP protocol.
                                  properties:
                                    icmpCode:
                                      description: icmpCode defines ICMP Code ID (RFC
                                        792). if configured, this field matches against
                                        the ICMP/ICMPv6 header otherwise its ignored.
                                      maximum: 255
                                      minimum: 0
                                      type: integer
                                    icmpType:
                                      description: imcpType defines ICMP Type Numbers
                                        (RFC 792). if configured, this field matches
                                        against the ICMP/ICMPv6 header otherwise its
                                        ignored.
                                      maximum: 255
                                      minimum: 0
                                      type: integer
                                  type: object
                                icmpv6:
                                  description: icmpv6 defines an ingress node firewall
                                    rule for ICMPv6 protocol.
                                  properties:
                                    icmpCode:
                                      description: icmpCode defines ICMP Code ID (RFC
                                        792). if configured, this field matches against
                                        the ICMP/ICMPv6 header otherwise its ignored.
                                      maximum: 255
                                      minimum: 0
                                      type: integer
                                    icmpType:
                                      description: imcpType defines ICMP Type Numbers
                                        (RFC 792). if configured, this field matches
                                        against the ICMP/ICMPv6 header otherwise its
                                        ignored.
                                      maximum: 255
                                      minimum: 0
                                      type: integer
                                  type: object
                                protocol:
                                  description: protocol can be ICMP, ICMPv6, TCP,
                                    SCTP or UDP.
                                  enum:
                                  - ICMP
                                  - ICMPv6
                                  - TCP
                                  - UDP
                                  - SCTP
                                  - ""
                                  type: string
                                sctp:
                                  description: sctp defines an ingress node firewall
                                    rule for SCTP protocol.
                                  properties:
                                    ports:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'ports defines either a single
                                        port or a range of ports to apply a protocol
                                        rule too. To filter a single port, set a single
                                        port as an integer value. For example ports:
                                        80. To filter a range of ports, use a "start-end"
                                        range, string format. For example ports: "80-100".'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                tcp:
                                  description: tcp defines an ingress node firewall
                                    rule for TCP protocol.
                                  properties:
                                    ports:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'ports defines either a single
                                        port or a range of ports to apply a protocol
                                        rule too. To filter a single port, set a single
                                        port as an integer value. For example ports:
                                        80. To filter a range of ports, use a "start-end"
                                        range, string format. For example ports: "80-100".'
                                      x-kubernetes-int-or-string: true
                                  type: object
                                udp:
                                  description: udp defines an ingress node firewall
                                    rule for UDP protocol.
                                  properties:
                                    ports:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'ports defines either a single
                                        port or a range of ports to apply a protocol
                                        rule too. To filter a single port, set a single
                                        port as an integer value. For example ports:
                                        80. To filter a range of ports, use a "start-end"
                                        range, string format. For example ports: "80-100".'
                                      x-kubernetes-int-or-string: true
                                  type: object
                              required:
                              - protocol
                              type: object
                              x-kubernetes-validations:
                              - message: tcp is required when protocol is TCP, and
                                  forbidden otherwise
                                rule: 'has(self.protocol) && self.protocol == ''TCP''
                                  ?  has(self.tcp) : !has(self.tcp)'
                              - message: udp is required when protocol is UDP, and
                                  forbidden otherwise
                                rule: 'has(self.protocol) && self.protocol == ''UDP''
                                  ?  has(self.udp) : !has(self.udp)'
                              - message: sctp is required when protocol is SCTP, and
                                  forbidden otherwise
                                rule: 'has(self.protocol) && self.protocol == ''SCTP''
                                  ?  has(self.sctp) : !has(self.sctp)'
                              - message: icmp is required when protocol is ICMP, and
                                  forbidden otherwise
                                rule: 'has(self.protocol) && self.protocol == ''ICMP''
                                  ?  has(self.icmp) : !has(self.icmp)'
                              - message: icmpv6 is required when protocol is ICMPv6,
                                  and forbidden otherwise
                                rule: 'has(self.protocol) && self.protocol == ''ICMPv6''
                                  ?  has(self.icmpv6) : !has(self.icmpv6)'
                          required:
                          - order
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - order
                        x-kubernetes-list-type: map
                      sourceCIDRs:
                        description: sourceCIDRs defines the origin of packets that
                          FirewallProtocolRules will be applied to.
                        items:
                          type: string
                        minItems: 1
                        type: array
                    required:
                    - sourceCIDRs
                    type: object
                  type: array
                description: interfaceIngressRules is a map that matches interface
                  names to ingress firewall policy rules that shall be applied on
                  the given interface. An empty map indicates no ingress firewall
                  rules shall be applied, i.e allow all incoming traffic.
                type: object
            required:
            - interfaceIngressRules
            type: object
          status:
            description: IngressNodeFirewallNodeStateStatus defines the observed state
              of IngressNodeFirewallNodeState.
            properties:
              syncErrorMessage:
                description: syncErrorMessage contains further information about the
                  encountered synchronization error.
                type: string
              syncStatus:
                description: syncStatus indicates if this IngressNodeFirewallNodeState
                  object could be successfully generated from the input IngressNodeFirewall
                  objects or if any issues occurred during this object's generation.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
