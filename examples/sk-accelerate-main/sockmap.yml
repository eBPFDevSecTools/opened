apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sockmap
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sockmap
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sockmap 
subjects:
- kind: ServiceAccount
  name: sockmap
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sockmap 
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sockmap
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: sockmap
  template:
    metadata:
      labels:
        app: sockmap
    spec:
      tolerations:
      - operator: Exists
        effect: NoSchedule
      serviceAccount: sockmap
      hostNetwork: true
      hostPID: true
      priorityClassName: system-node-critical
      containers:
      - name: sockmap
        image: haih/sk-accelerate
        imagePullPolicy: Always
        command:
        - /root/bin/sockmap_daemon
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: opt
          mountPath: /opt
        - name: sys
          mountPath: /sys
        - name: sk-run
          mountPath: /var/run/sk-accelerate
      volumes:
      - name: opt
        hostPath:
          path: /opt
      - name: sys
        hostPath:
          path: /sys
      - name: sk-run
        hostPath:
          path: /var/run/sk-accelerate
          type: DirectoryOrCreate
