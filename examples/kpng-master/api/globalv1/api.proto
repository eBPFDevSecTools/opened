// Copyright 2021 The Kubernetes Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package globalv1;

import "api/localv1/api.proto";

option go_package = "sigs.k8s.io/kpng/api/globalv1";

//
// global (cluster-wide) model
//

message ServiceInfo {
  uint64 Hash = 1;

  localv1.Service Service = 2;
}

message EndpointInfo {
  uint64 Hash = 1;

  string Namespace = 2;
  string SourceName = 3;
  string ServiceName = 4;
  reserved 5;
  string PodName = 8;

  localv1.Endpoint Endpoint = 6;
  EndpointConditions Conditions = 7;
  TopologyInfo Topology = 9;
  TopologyHints Hints = 10;
}

message EndpointConditions {
  bool Ready = 1;
}

message TopologyInfo {
  string Node = 1;
  string Zone = 2;
}

message TopologyHints {
  repeated string Zones = 1;
}

message NodeInfo {
  uint64 Hash = 1;
  Node   Node = 2;
}

message Node {
  string Name = 1;
  TopologyInfo Topology = 4;
  map<string, string> Labels = 2;
  map<string, string> Annotations = 3;
}

service Sets {
  rpc Watch(stream GlobalWatchReq) returns (stream localv1.OpItem);
}

message GlobalWatchReq {}
