<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/compat.bpf.h" funcheader="static __always_inline void *reserve_buf (__u64 size)" startline="25" endline="33">
static __always_inline void *reserve_buf (__u64 size)
{
    static const int zero = 0;
    if (bpf_core_type_exists (struct bpf_ringbuf))
        return bpf_ringbuf_reserve (&events, size, 0);
    return bpf_map_lookup_elem (&heap, &zero);
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/compat.bpf.h" funcheader="static __always_inline long submit_buf (void *ctx, void *buf, __u64 size)" startline="35" endline="43">
static __always_inline long submit_buf (void *ctx, void *buf, __u64 size)
{
    if (bpf_core_type_exists (struct bpf_ringbuf)) {
        bpf_ringbuf_submit (buf, 0);
        return 0;
    }
    return bpf_perf_event_output (ctx, &events, BPF_F_CURRENT_CPU, buf, size);
}
</source>
</doc>
