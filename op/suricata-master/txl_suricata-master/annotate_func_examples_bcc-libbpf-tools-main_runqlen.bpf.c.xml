<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/runqlen.bpf.c" funcheader="int do_sample (struct bpf_perf_event_data *ctx)" startline="15" endline="50">
int do_sample (struct bpf_perf_event_data *ctx)
{
    struct task_struct *task;
    struct hist *hist;
    u64 slot, cpu = 0;
    task = (void *) bpf_get_current_task ();
    if (targ_host)
        slot = BPF_CORE_READ (task, se.cfs_rq, rq, nr_running);
    else
        slot = BPF_CORE_READ (task, se.cfs_rq, nr_running);
    if (slot > 0)
        slot--;
    if (targ_per_cpu) {
        cpu = bpf_get_smp_processor_id ();
        if (cpu >= MAX_CPU_NR)
            return 0;
    }
    hist = &hists[cpu];
    if (slot >= MAX_SLOTS)
        slot = MAX_SLOTS - 1;
    if (targ_per_cpu)
        hist->slots[slot]++;
    else
        __sync_fetch_and_add (&hist->slots[slot], 1);
    return 0;
}
</source>
</doc>
