<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/numamove.bpf.c" funcheader="static int __migrate_misplaced_page (void)" startline="17" endline="24">
static int __migrate_misplaced_page (void)
{
    u32 pid = bpf_get_current_pid_tgid ();
    u64 ts = bpf_ktime_get_ns ();
    bpf_map_update_elem (&start, &pid, &ts, 0);
    return 0;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/numamove.bpf.c" funcheader="int BPF_PROG (fentry_migrate_misplaced_page)" startline="27" endline="30">
int BPF_PROG (fentry_migrate_misplaced_page)
{
    return __migrate_misplaced_page ();
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/numamove.bpf.c" funcheader="int BPF_PROG (kprobe_migrate_misplaced_page)" startline="33" endline="36">
int BPF_PROG (kprobe_migrate_misplaced_page)
{
    return __migrate_misplaced_page ();
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/numamove.bpf.c" funcheader="static int __migrate_misplaced_page_exit (void)" startline="38" endline="56">
static int __migrate_misplaced_page_exit (void)
{
    u32 pid = bpf_get_current_pid_tgid ();
    u64 *tsp, ts = bpf_ktime_get_ns ();
    s64 delta;
    tsp = bpf_map_lookup_elem (& start, & pid);
    if (!tsp)
        return 0;
    delta = (s64) (ts - *tsp);
    if (delta < 0)
        goto cleanup;
    __sync_fetch_and_add (&latency, delta / 1000000U);
    __sync_fetch_and_add (&num, 1);
cleanup :
    bpf_map_delete_elem (&start, &pid);
    return 0;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/numamove.bpf.c" funcheader="int BPF_PROG (fexit_migrate_misplaced_page_exit)" startline="59" endline="62">
int BPF_PROG (fexit_migrate_misplaced_page_exit)
{
    return __migrate_misplaced_page_exit ();
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/numamove.bpf.c" funcheader="int BPF_PROG (kretprobe_migrate_misplaced_page_exit)" startline="65" endline="68">
int BPF_PROG (kretprobe_migrate_misplaced_page_exit)
{
    return __migrate_misplaced_page_exit ();
}
</source>
</doc>
