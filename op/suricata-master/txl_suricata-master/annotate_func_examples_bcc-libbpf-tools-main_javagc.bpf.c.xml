<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/javagc.bpf.c" funcheader="static int gc_start (struct pt_regs *ctx)" startline="24" endline="33">
static int gc_start (struct pt_regs *ctx)
{
    struct data_t data = {}
    ;
    data.cpu = bpf_get_smp_processor_id ();
    data.pid = bpf_get_current_pid_tgid () >> 32;
    data.ts = bpf_ktime_get_ns ();
    bpf_map_update_elem (&data_map, &data.pid, &data, 0);
    return 0;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/javagc.bpf.c" funcheader="static int gc_end (struct pt_regs *ctx)" startline="35" endline="55">
static int gc_end (struct pt_regs *ctx)
{
    struct data_t data = {}
    ;
    struct data_t *p;
    __u32 val;
    data.cpu = bpf_get_smp_processor_id ();
    data.pid = bpf_get_current_pid_tgid () >> 32;
    data.ts = bpf_ktime_get_ns ();
    p = bpf_map_lookup_elem (& data_map, & data.pid);
    if (!p)
        return 0;
    val = data.ts - p->ts;
    if (val > time) {
        data.ts = val;
        bpf_perf_event_output (ctx, &perf_map, BPF_F_CURRENT_CPU, &data, sizeof (data));
    }
    bpf_map_delete_elem (&data_map, &data.pid);
    return 0;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/javagc.bpf.c" funcheader="int handle_gc_start (struct pt_regs *ctx)" startline="58" endline="61">
int handle_gc_start (struct pt_regs *ctx)
{
    return gc_start (ctx);
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/javagc.bpf.c" funcheader="int handle_gc_end (struct pt_regs *ctx)" startline="64" endline="67">
int handle_gc_end (struct pt_regs *ctx)
{
    return gc_end (ctx);
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/javagc.bpf.c" funcheader="int handle_mem_pool_gc_start (struct pt_regs *ctx)" startline="70" endline="73">
int handle_mem_pool_gc_start (struct pt_regs *ctx)
{
    return gc_start (ctx);
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/javagc.bpf.c" funcheader="int handle_mem_pool_gc_end (struct pt_regs *ctx)" startline="76" endline="79">
int handle_mem_pool_gc_end (struct pt_regs *ctx)
{
    return gc_end (ctx);
}
</source>
</doc>
