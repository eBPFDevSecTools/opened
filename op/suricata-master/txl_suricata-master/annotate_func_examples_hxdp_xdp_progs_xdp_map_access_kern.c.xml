<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/hxdp_xdp_progs/xdp_map_access_kern.c" funcheader="static void swap_src_dst_mac (void *data)" startline="24" endline="38">
static void swap_src_dst_mac (void *data)
{
    unsigned short *p = data;
    unsigned short dst [3];
    dst[0] = p[0];
    dst[1] = p[1];
    dst[2] = p[2];
    p[0] = p[3];
    p[1] = p[4];
    p[2] = p[5];
    p[3] = dst[0];
    p[4] = dst[1];
    p[5] = dst[2];
}
</source>
<source file="/home/sayandes/opened_extraction/examples/hxdp_xdp_progs/xdp_map_access_kern.c" funcheader="int xdp_prog1 (struct xdp_md *ctx)" startline="41" endline="70">
int xdp_prog1 (struct xdp_md *ctx)
{
    void *data_end = (void *) (long) ctx->data_end;
    void *data = (void *) (long) ctx->data;
    struct ethhdr *eth = data;
    struct dummy_key key = {0}
    ;
    int rc = XDP_DROP;
    long *value;
    u16 h_proto;
    u64 nh_off;
    long dummy_value = 1;
    nh_off = sizeof (*eth);
    if (data + nh_off > data_end)
        return rc;
    h_proto = eth->h_proto;
    key.key = 23;
    value = bpf_map_lookup_elem (& rxcnt, & key);
    if (value) {
        *value += 1;
    }
    else {
        bpf_map_update_elem (&rxcnt, &key, &dummy_value, BPF_ANY);
    }
    return rc;
}
</source>
</doc>
