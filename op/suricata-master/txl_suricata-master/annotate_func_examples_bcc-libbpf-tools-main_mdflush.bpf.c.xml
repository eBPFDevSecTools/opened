<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/mdflush.bpf.c" funcheader="int BPF_PROG (md_flush_request, void *mddev, void *bio)" startline="17" endline="29">
int BPF_PROG (md_flush_request, void *mddev, void *bio)
{
    __u64 pid = bpf_get_current_pid_tgid () >> 32;
    struct event event = {}
    ;
    struct gendisk *gendisk;
    event.pid = pid;
    gendisk = get_gendisk (bio);
    BPF_CORE_READ_STR_INTO (event.disk, gendisk, disk_name);
    bpf_get_current_comm (event.comm, sizeof (event.comm));
    bpf_perf_event_output (ctx, &events, BPF_F_CURRENT_CPU, &event, sizeof (event));
    return 0;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/bcc-libbpf-tools-main/mdflush.bpf.c" funcheader="int BPF_KPROBE (kprobe_md_flush_request, void *mddev, void *bio)" startline="32" endline="44">
int BPF_KPROBE (kprobe_md_flush_request, void *mddev, void *bio)
{
    __u64 pid = bpf_get_current_pid_tgid () >> 32;
    struct event event = {}
    ;
    struct gendisk *gendisk;
    event.pid = pid;
    gendisk = get_gendisk (bio);
    BPF_CORE_READ_STR_INTO (event.disk, gendisk, disk_name);
    bpf_get_current_comm (event.comm, sizeof (event.comm));
    bpf_perf_event_output (ctx, &events, BPF_F_CURRENT_CPU, &event, sizeof (event));
    return 0;
}
</source>
</doc>
