<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/cilium/include/bpf/csum.h" funcheader="static __always_inline __sum16 csum_fold (__wsum csum)" startline="10" endline="15">
static __always_inline __sum16 csum_fold (__wsum csum)
{
    csum = (csum & 0xffff) + (csum >> 16);
    csum = (csum & 0xffff) + (csum >> 16);
    return (__sum16) ~csum;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/cilium/include/bpf/csum.h" funcheader="static __always_inline __wsum csum_unfold (__sum16 csum)" startline="17" endline="20">
static __always_inline __wsum csum_unfold (__sum16 csum)
{
    return (__wsum) csum;
}
</source>
<source file="/home/sayandes/opened_extraction/examples/cilium/include/bpf/csum.h" funcheader="static __always_inline __wsum csum_add (__wsum csum, __wsum addend)" startline="22" endline="26">
static __always_inline __wsum csum_add (__wsum csum, __wsum addend)
{
    csum += addend;
    return csum + (csum < addend);
}
</source>
<source file="/home/sayandes/opened_extraction/examples/cilium/include/bpf/csum.h" funcheader="static __always_inline __wsum csum_sub (__wsum csum, __wsum addend)" startline="28" endline="31">
static __always_inline __wsum csum_sub (__wsum csum, __wsum addend)
{
    return csum_add (csum, ~addend);
}
</source>
<source file="/home/sayandes/opened_extraction/examples/cilium/include/bpf/csum.h" funcheader="static __always_inline __wsum csum_diff (const void *from, __u32 size_from, const void *to, __u32 size_to, __u32 seed)" startline="33" endline="52">
static __always_inline __wsum csum_diff (const void *from, __u32 size_from, const void *to, __u32 size_to, __u32 seed)
{
    if (__builtin_constant_p (size_from) && __builtin_constant_p (size_to)) {
        if (size_from == 4 && size_to == 4 && __builtin_constant_p (seed) && seed == 0)
            return csum_add (~(*(__u32*) from), *(__u32*) to);
        if (size_from == 4 && size_to == 4)
            return csum_add (seed, csum_add (~(*(__u32*) from), *(__u32*) to));
    }
    return csum_diff_external (from, size_from, to, size_to, seed);
}
</source>
</doc>
