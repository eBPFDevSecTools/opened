<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/opened_extraction/examples/cilium/lib/metrics.h" funcheader="static __always_inline void update_metrics (__u64 bytes, __u8 direction, __u8 reason)" startline="24" endline="43">
static __always_inline void update_metrics (__u64 bytes, __u8 direction, __u8 reason)
{
    struct metrics_value *entry, new_entry = {};
    struct metrics_key key = {}
    ;
    key.reason = reason;
    key.dir = direction;
    entry = map_lookup_elem (& METRICS_MAP, & key);
    if (entry) {
        entry->count += 1;
        entry->bytes += bytes;
    }
    else {
        new_entry.count = 1;
        new_entry.bytes = bytes;
        map_update_elem (&METRICS_MAP, &key, &new_entry, 0);
    }
}
</source>
<source file="/home/sayandes/opened_extraction/examples/cilium/lib/metrics.h" funcheader="static __always_inline enum metric_dir ct_to_metrics_dir (enum ct_dir ct_dir)" startline="50" endline="62">
static __always_inline enum metric_dir ct_to_metrics_dir (enum ct_dir ct_dir)
{
    switch (ct_dir) {
    case CT_INGRESS :
        return METRIC_INGRESS;
    case CT_EGRESS :
        return METRIC_EGRESS;
    case CT_SERVICE :
        return METRIC_SERVICE;
    default :
        return 0;
    }
}
</source>
</doc>
