<?xml version="1.0"?>
<doc>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/drop.h" funcheader="int __send_drop_notify (struct  __ctx_buff *ctx)" startline="52" endline="80">
int __send_drop_notify (struct  __ctx_buff *ctx)
{
    __u32 error = ctx_load_meta (ctx, 2) & 0xFFFFFFFF;
    __u64 ctx_len = ctx_full_len (ctx);
    __u64 cap_len = min_t (__u64, TRACE_PAYLOAD_LEN, ctx_len);
    __u32 meta4 = ctx_load_meta (ctx, 4);
    __u16 line = (__u16) (meta4 >> 16);
    __u8 file = (__u8) (meta4 >> 8);
    __u8 exitcode = (__u8) meta4;
    struct drop_notify msg;
    msg = (typeof (msg)) {__notify_common_hdr (CILIUM_NOTIFY_DROP, (__u8) error), __notify_pktcap_hdr (ctx_len, (__u16) cap_len),
        .src_label = ctx_load_meta (ctx, 0),
        .dst_label = ctx_load_meta (ctx, 1),
        .dst_id = ctx_load_meta (ctx, 3),
        .line = line,
        .file = file,
        .ext_error = (__s8) (__u8) (error >> 8),};
    ctx_event_output (ctx, &EVENTS_MAP, (cap_len << 32) | BPF_F_CURRENT_CPU, &msg, sizeof (msg));
    return exitcode;
}
</source>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/drop.h" funcheader="static __always_inline int _send_drop_notify (__u8 file, __u16 line, struct  __ctx_buff *ctx, __u32 src, __u32 dst, __u32 dst_id, __u32 reason, __u32 exitcode, enum metric_dir direction)" startline="95" endline="116">
static __always_inline int _send_drop_notify (__u8 file, __u16 line, struct  __ctx_buff *ctx, __u32 src, __u32 dst, __u32 dst_id, __u32 reason, __u32 exitcode, enum metric_dir direction)
{
    if (!__builtin_constant_p (exitcode) || exitcode > 0xff || !__builtin_constant_p (file) || file > 0xff || !__builtin_constant_p (line) || line > 0xffff)
        __throw_build_bug ();
    ctx_store_meta (ctx, 0, src);
    ctx_store_meta (ctx, 1, dst);
    ctx_store_meta (ctx, 2, reason);
    ctx_store_meta (ctx, 3, dst_id);
    ctx_store_meta (ctx, 4, exitcode | file << 8 | line << 16);
    update_metrics (ctx_full_len (ctx), direction, (__u8) reason);
    ep_tail_call (ctx, CILIUM_CALL_DROP_NOTIFY);
    return exitcode;
}
</source>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/drop.h" funcheader="static __always_inline int _send_drop_notify (__u8 file __maybe_unused, __u16 line __maybe_unused, struct  __ctx_buff *ctx, __u32 src __maybe_unused, __u32 dst __maybe_unused, __u32 dst_id __maybe_unused, __u32 reason, __u32 exitcode, enum metric_dir direction)" startline="118" endline="126">
static __always_inline int _send_drop_notify (__u8 file __maybe_unused, __u16 line __maybe_unused, struct  __ctx_buff *ctx, __u32 src __maybe_unused, __u32 dst __maybe_unused, __u32 dst_id __maybe_unused, __u32 reason, __u32 exitcode, enum metric_dir direction)
{
    update_metrics (ctx_full_len (ctx), direction, (__u8) reason);
    return exitcode;
}
</source>
</doc>
