<?xml version="1.0"?>
<doc>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/signal.h" funcheader="static __always_inline void send_signal (struct  __ctx_buff *ctx, struct signal_msg *msg)" startline="36" endline="41">
static __always_inline void send_signal (struct  __ctx_buff *ctx, struct signal_msg *msg)
{
    ctx_event_output (ctx, &SIGNAL_MAP, BPF_F_CURRENT_CPU, msg, sizeof (*msg));
}
</source>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/signal.h" funcheader="static __always_inline void send_signal_nat_fill_up (struct  __ctx_buff *ctx, __u32 proto)" startline="43" endline="52">
static __always_inline void send_signal_nat_fill_up (struct  __ctx_buff *ctx, __u32 proto)
{
    struct signal_msg msg = {
        .signal_nr = SIGNAL_NAT_FILL_UP,
        .proto = proto,}
    ;
    send_signal (ctx, &msg);
}
</source>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/signal.h" funcheader="static __always_inline void send_signal_ct_fill_up (struct  __ctx_buff *ctx, __u32 proto)" startline="54" endline="63">
static __always_inline void send_signal_ct_fill_up (struct  __ctx_buff *ctx, __u32 proto)
{
    struct signal_msg msg = {
        .signal_nr = SIGNAL_CT_FILL_UP,
        .proto = proto,}
    ;
    send_signal (ctx, &msg);
}
</source>
</doc>
