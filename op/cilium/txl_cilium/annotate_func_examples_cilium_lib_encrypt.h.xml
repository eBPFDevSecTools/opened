<?xml version="1.0"?>
<doc>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/encrypt.h" funcheader="static __always_inline int do_decrypt (struct  __ctx_buff *ctx, __u16 proto)" startline="15" endline="75">
static __always_inline int do_decrypt (struct  __ctx_buff *ctx, __u16 proto)
{
    void *data, *data_end;
    __u8 protocol = 0;
    bool decrypted;

#ifdef ENABLE_IPV6
    struct ipv6hdr *ip6;

#endif

#ifdef ENABLE_IPV4
    struct iphdr *ip4;

#endif
    decrypted = ((ctx->mark & MARK_MAGIC_HOST_MASK) == MARK_MAGIC_DECRYPT);
    switch (proto) {

#ifdef ENABLE_IPV6
    case bpf_htons (ETH_P_IPV6) :
        if (!revalidate_data_pull (ctx, &data, &data_end, &ip6)) {
            ctx->mark = 0;
            return CTX_ACT_OK;
        }
        protocol = ip6->nexthdr;
        break;

#endif

#ifdef ENABLE_IPV4
    case bpf_htons (ETH_P_IP) :
        if (!revalidate_data_pull (ctx, &data, &data_end, &ip4)) {
            ctx->mark = 0;
            return CTX_ACT_OK;
        }
        protocol = ip4->protocol;
        break;

#endif
    default :
        return CTX_ACT_OK;
    }
    if (!decrypted) {
        if (protocol != IPPROTO_ESP)
            return CTX_ACT_OK;
        ctx->mark = MARK_MAGIC_DECRYPT;
        ctx_change_type (ctx, PACKET_HOST);
        return CTX_ACT_OK;
    }
    ctx->mark = 0;

#ifdef ENABLE_ENDPOINT_ROUTES
    return CTX_ACT_OK;

#else
    return ctx_redirect (ctx, CILIUM_IFINDEX, 0);

#endif /* ENABLE_ROUTING */
}
</source>
<source file="/home/palani/github/opened_extraction/examples/cilium/lib/encrypt.h" funcheader="static __always_inline int do_decrypt (struct  __ctx_buff  __maybe_unused *ctx, __u16 __maybe_unused proto)" startline="77" endline="81">
static __always_inline int do_decrypt (struct  __ctx_buff  __maybe_unused *ctx, __u16 __maybe_unused proto)
{
    return CTX_ACT_OK;
}
</source>
</doc>
