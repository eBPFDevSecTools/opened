{"hello": [{"fileName": "/root/examples/bcc/hello_perf_output_using_ns.c", "startLine": "11", "endLine": "24", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}, {"Return Type": "int", "Description": "Copy the comm attribute of the current task into <[ buf ]>(IP: 0) of size_of_buf. The comm attribute contains the name of the executable (excluding the path) for the current task. The <[ size_of_buf ]>(IP: 1) must be strictly positive. On success , the helper makes sure that the <[ buf ]>(IP: 0) is NUL-terminated. On failure , it is filled with zeroes. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_get_current_comm", "Input Params": ["{Type: char ,Var: *buf}", "{Type:  u32 ,Var: size_of_buf}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "    data.ts ", "inpVar": [" "]}], "bpf_get_current_comm": [{"opVar": "NA", "inpVar": ["    &data.comm", " sizeofdata.comm"]}]}}}, {"fileName": "/root/examples/bcc/trace_fields.c", "startLine": "1", "endLine": "4", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["  \"Hello", " World!\\\\n\""]}]}}}, {"fileName": "/root/examples/bcc/hello_fields.c", "startLine": "1", "endLine": "4", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["    \"Hello", " World!\\\\n\""]}]}}}, {"fileName": "/root/examples/bcc/hello_perf_output.c", "startLine": "11", "endLine": "21", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}, {"Return Type": "int", "Description": "Copy the comm attribute of the current task into <[ buf ]>(IP: 0) of size_of_buf. The comm attribute contains the name of the executable (excluding the path) for the current task. The <[ size_of_buf ]>(IP: 1) must be strictly positive. On success , the helper makes sure that the <[ buf ]>(IP: 0) is NUL-terminated. On failure , it is filled with zeroes. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_get_current_comm", "Input Params": ["{Type: char ,Var: *buf}", "{Type:  u32 ,Var: size_of_buf}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "    data.pid ", "inpVar": [" "]}], "bpf_ktime_get_ns": [{"opVar": "    data.ts ", "inpVar": [" "]}], "bpf_get_current_comm": [{"opVar": "NA", "inpVar": ["    &data.comm", " sizeofdata.comm"]}]}}}], "detect_ddos": [{"fileName": "/root/examples/bcc/dddos.c", "startLine": "15", "endLine": "61", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "        rcv_packets_ts_inter ", "inpVar": ["  - *rcv_packets_ts_ptr"]}, {"opVar": "                rcv_packets_ts_inter ", "inpVar": [" "]}]}}}], "*skb_to_tcphdr": [{"fileName": "/root/examples/bcc/nflatency.c", "startLine": "8", "endLine": "12", "capability": {"capability": [], "helperCallParams": {}}}], "*skb_to_iphdr": [{"fileName": "/root/examples/bcc/nflatency.c", "startLine": "14", "endLine": "18", "capability": {"capability": [], "helperCallParams": {}}}], "*skb_to_ip6hdr": [{"fileName": "/root/examples/bcc/nflatency.c", "startLine": "20", "endLine": "24", "capability": {"capability": [], "helperCallParams": {}}}], "kprobe__nf_hook_slow": [{"fileName": "/root/examples/bcc/nflatency.c", "startLine": "49", "endLine": "88", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "    data.ts ", "inpVar": [" "]}]}}}], "kretprobe__nf_hook_slow": [{"fileName": "/root/examples/bcc/nflatency.c", "startLine": "90", "endLine": "111", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "        s->ts ", "inpVar": ["  - s->ts"]}]}}}], "count": [{"fileName": "/root/examples/bcc/strlen_count.c", "startLine": "8", "endLine": "22", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "For tracing programs , safely attempt to read <[ size ]>(IP: 1) bytes from address <[ src ]>(IP: 2) and store the data in dst. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_probe_read", "Input Params": ["{Type: void ,Var: *dst}", "{Type:  u32 ,Var: size}", "{Type:  const void ,Var: *src}"]}]}], "helperCallParams": {"bpf_probe_read": [{"opVar": "NA", "inpVar": ["    _user&key.c", " sizeofkey.c", " void *PT_REGS_PARM1ctx"]}]}}}, {"fileName": "/root/examples/bcc/strlen_hist_ifunc.c", "startLine": "4", "endLine": "7", "capability": {"capability": [], "helperCallParams": {}}}, {"fileName": "/root/examples/bcc/strlen_hist.c", "startLine": "3", "endLine": "6", "capability": {"capability": [], "helperCallParams": {}}}], "kprobe__tcp_v4_connect": [{"fileName": "/root/examples/bcc/tcpv4connect.c", "startLine": "7", "endLine": "15", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "\tu32 pid ", "inpVar": [" "]}]}}}], "kretprobe__tcp_v4_connect": [{"fileName": "/root/examples/bcc/tcpv4connect.c", "startLine": "17", "endLine": "47", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "\tu32 pid ", "inpVar": [" "]}], "bpf_trace_printk": [{"opVar": "NA", "inpVar": ["\t\t\"trace_tcp4connect %x %x %d\\\\n\"", " saddr", " daddr", " ntohsdport"]}]}}}], "submit_impl_func_addr": [{"fileName": "/root/examples/bcc/strlen_hist_ifunc.c", "startLine": "11", "endLine": "14", "capability": {"capability": [], "helperCallParams": {}}}], "submit_resolv_func_addr": [{"fileName": "/root/examples/bcc/strlen_hist_ifunc.c", "startLine": "18", "endLine": "22", "capability": {"capability": [], "helperCallParams": {}}}], "trace_req_done": [{"fileName": "/root/examples/bcc/bitehist.c", "startLine": "7", "endLine": "12", "capability": {"capability": [], "helperCallParams": {}}}], "do_trace": [{"fileName": "/root/examples/bcc/sync_timing.c", "startLine": "5", "endLine": "23", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "        delta ", "inpVar": ["  - *tsp"]}, {"opVar": "            ts ", "inpVar": [" "]}], "bpf_trace_printk": [{"opVar": "NA", "inpVar": ["                        \"%d\\\\n\"", " delta / 1000000"]}]}}}, {"fileName": "/root/examples/bcc/nodejs_http_server.c", "startLine": "2", "endLine": "9", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "For tracing programs , safely attempt to read <[ size ]>(IP: 1) bytes from address <[ src ]>(IP: 2) and store the data in dst. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_probe_read", "Input Params": ["{Type: void ,Var: *dst}", "{Type:  u32 ,Var: size}", "{Type:  const void ,Var: *src}"]}]}], "helperCallParams": {"bpf_probe_read": [{"opVar": "NA", "inpVar": ["    _user&path", " sizeofpath", " void *addr"]}], "bpf_trace_printk": [{"opVar": "NA", "inpVar": ["    \"path:%s\\\\n\"", " path"]}]}}}, {"fileName": "/root/examples/bcc/mysqld_query.c", "startLine": "2", "endLine": "15", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "For tracing programs , safely attempt to read <[ size ]>(IP: 1) bytes from address <[ src ]>(IP: 2) and store the data in dst. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_probe_read", "Input Params": ["{Type: void ,Var: *dst}", "{Type:  u32 ,Var: size}", "{Type:  const void ,Var: *src}"]}]}], "helperCallParams": {"bpf_probe_read": [{"opVar": "NA", "inpVar": ["    _user&query", " sizeofquery", " void *addr"]}], "bpf_trace_printk": [{"opVar": "NA", "inpVar": ["    \"%s\\\\n\"", " query"]}]}}}], "trace_stack": [{"fileName": "/root/examples/bcc/stacksnoop.c", "startLine": "13", "endLine": "21", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "Copy the comm attribute of the current task into <[ buf ]>(IP: 0) of size_of_buf. The comm attribute contains the name of the executable (excluding the path) for the current task. The <[ size_of_buf ]>(IP: 1) must be strictly positive. On success , the helper makes sure that the <[ buf ]>(IP: 0) is NUL-terminated. On failure , it is filled with zeroes. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_get_current_comm", "Input Params": ["{Type: char ,Var: *buf}", "{Type:  u32 ,Var: size_of_buf}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "    u32 pid ", "inpVar": ["  >> 32"]}], "bpf_get_current_comm": [{"opVar": "NA", "inpVar": ["    &data.comm", " sizeofdata.comm"]}]}}}], "TRACEPOINT_PROBE": [{"fileName": "/root/examples/bcc/kvm_hypercall.c", "startLine": "4", "endLine": "12", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["        \"KVM_EXIT exit_reason : %d\\\\n\"", " args->exit_reason"]}]}}}, {"fileName": "/root/examples/bcc/kvm_hypercall.c", "startLine": "14", "endLine": "23", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["        \"KVM_ENTRY vcpu_id : %u\\\\n\"", " args->vcpu_id"]}]}}}, {"fileName": "/root/examples/bcc/kvm_hypercall.c", "startLine": "25", "endLine": "33", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["        \"HYPERCALL nr : %d\\\\n\"", " args->nr"]}]}}}, {"fileName": "/root/examples/bcc/urandomread.c", "startLine": "1", "endLine": "5", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["        \"%d\\\\n\"", " args->got_bits"]}]}}}], "do_perf_event": [{"fileName": "/root/examples/bcc/stack_buildid_example.c", "startLine": "13", "endLine": "26", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "Copy the comm attribute of the current task into <[ buf ]>(IP: 0) of size_of_buf. The comm attribute contains the name of the executable (excluding the path) for the current task. The <[ size_of_buf ]>(IP: 1) must be strictly positive. On success , the helper makes sure that the <[ buf ]>(IP: 0) is NUL-terminated. On failure , it is filled with zeroes. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_get_current_comm", "Input Params": ["{Type: char ,Var: *buf}", "{Type:  u32 ,Var: size_of_buf}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "    u32 pid ", "inpVar": ["  >> 32"]}], "bpf_get_current_comm": [{"opVar": "NA", "inpVar": ["    &key.name", " sizeofkey.name"]}]}}}], "printarg": [{"fileName": "/root/examples/bcc/strlen_snoop.c", "startLine": "2", "endLine": "15", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "For tracing programs , safely attempt to read <[ size ]>(IP: 1) bytes from address <[ src ]>(IP: 2) and store the data in dst. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_probe_read", "Input Params": ["{Type: void ,Var: *dst}", "{Type:  u32 ,Var: size}", "{Type:  const void ,Var: *src}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "    u32 pid ", "inpVar": [" "]}], "bpf_probe_read": [{"opVar": "NA", "inpVar": ["    _user&str", " sizeofstr", " void *PT_REGS_PARM1ctx"]}], "bpf_trace_printk": [{"opVar": "NA", "inpVar": ["    \"%s\\\\n\"", " &str"]}]}}}, {"fileName": "/root/examples/bcc/urandomread-explicit.c", "startLine": "11", "endLine": "14", "capability": {"capability": [], "helperCallParams": {"bpf_trace_printk": [{"opVar": "NA", "inpVar": ["    \"%d\\\\n\"", " args->got_bits"]}]}}}], "do_entry": [{"fileName": "/root/examples/bcc/vfsreadlat.c", "startLine": "18", "endLine": "27", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "\tpid ", "inpVar": [" "]}], "bpf_ktime_get_ns": [{"opVar": "\tts ", "inpVar": [" "]}]}}}], "do_return": [{"fileName": "/root/examples/bcc/vfsreadlat.c", "startLine": "29", "endLine": "44", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "\tpid ", "inpVar": [" "]}], "bpf_ktime_get_ns": [{"opVar": "\t\tdelta ", "inpVar": ["  - *tsp"]}]}}}], "RAW_TRACEPOINT_PROBE": [{"fileName": "/root/examples/bcc/biolatpcts.c", "startLine": "10", "endLine": "36", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "        dur ", "inpVar": ["  - rq->io_start_time_ns"]}]}}}], "trace_start": [{"fileName": "/root/examples/bcc/disksnoop.c", "startLine": "6", "endLine": "11", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "\t\tu64 ts ", "inpVar": [" "]}]}}}], "trace_completion": [{"fileName": "/root/examples/bcc/disksnoop.c", "startLine": "13", "endLine": "23", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "\t\tdelta ", "inpVar": ["  - *tsp"]}], "bpf_trace_printk": [{"opVar": "NA", "inpVar": ["\t\t\"%d %x %d\\\\n\"", " req->__data_len", "\t\t    req->cmd_flags", " delta / 1000"]}]}}}], "trace_unix_stream_read_actor": [{"fileName": "/root/examples/bcc/undump.c", "startLine": "24", "endLine": "51", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "int", "Description": "For tracing programs , safely attempt to read <[ size ]>(IP: 1) bytes from address <[ src ]>(IP: 2) and store the data in dst. ", "Return": " 0 on success, or a negative error in case of failure.", "Function Name": "bpf_probe_read", "Input Params": ["{Type: void ,Var: *dst}", "{Type:  u32 ,Var: size}", "{Type:  const void ,Var: *src}"]}, {"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "    u64 pid_tgid ", "inpVar": [" "]}], "bpf_probe_read": [{"opVar": "NA", "inpVar": ["    data->pkt", " data_len", " iodata"]}]}}}], "do_sys_clone": [{"fileName": "/root/examples/bcc/trace_perf_output.c", "startLine": "3", "endLine": "15", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Description": "Return the time elapsed since system boot , in nanoseconds. ", "Return": " Current ktime.", "Function Name": "bpf_ktime_get_ns", "Input Params": ["{Type: voi ,Var: void}"]}]}], "helperCallParams": {"bpf_ktime_get_ns": [{"opVar": "NA", "inpVar": ["", " 0x12345678"]}], "bpf_trace_printk": [{"opVar": "  if ((rc ", "inpVar": [" events.perf_submitctx", " &data", " sizeofdata < 0    \"perf_output failed: %d\\\\n\"", " rc"]}]}}}], "count_sched": [{"fileName": "/root/examples/bcc/task_switch.c", "startLine": "10", "endLine": "23", "capability": {"capability": [{"capability": "read_sys_info", "read_sys_info": [{"Return Type": "u64", "Return": " A 64-bit integer containing the current tgid and pid, and created  as  such:                     current_task->tgid << 32 | current_task->pid.", "Function Name": "bpf_get_current_pid_tgid", "Input Params": ["{Type: voi ,Var: void}"], "Description": "A 64-bit integer containing the current tgid and pid , and created as such: current_task->tgid << 32 | current_task->pid. "}]}], "helperCallParams": {"bpf_get_current_pid_tgid": [{"opVar": "    key.curr_pid ", "inpVar": [" "]}]}}}], "alloc_enter": [{"fileName": "/root/examples/bcc/mallocstacks.c", "startLine": "6", "endLine": "18", "capability": {"capability": [], "helperCallParams": {}}}]}